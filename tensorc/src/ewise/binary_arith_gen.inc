
#include <stdint.h>
#include <stdlib.h>
        
template<typename O, typename I1, typename I2>
const char* tcPlus(O* out, const I1* inp1, const I2* inp2, const I2* scalar, uint64_t nel, uint8_t flip);
        
template const char* tcPlus(double* out, const double* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const double* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const double* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const double* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const double* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const double* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const double* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const double* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const double* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const double* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const float* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const float* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const float* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const float* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const float* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const float* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const float* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const float* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const float* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const float* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const int8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(double* out, const uint8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const double* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const double* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const double* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const double* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const double* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const double* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const double* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const double* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const double* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const double* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const float* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const float* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const float* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const float* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const float* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const float* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const float* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const float* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const float* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const float* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const int8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(float* out, const uint8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const double* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const double* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const double* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const double* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const double* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const double* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const double* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const double* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const double* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const double* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const float* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const float* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const float* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const float* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const float* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const float* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const float* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const float* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const float* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const float* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const int8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int64_t* out, const uint8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const double* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const double* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const double* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const double* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const double* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const double* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const double* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const double* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const double* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const double* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const float* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const float* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const float* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const float* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const float* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const float* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const float* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const float* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const float* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const float* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const int8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int32_t* out, const uint8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const double* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const double* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const double* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const double* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const double* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const double* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const double* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const double* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const double* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const double* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const float* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const float* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const float* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const float* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const float* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const float* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const float* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const float* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const float* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const float* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const int8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int16_t* out, const uint8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const double* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const double* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const double* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const double* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const double* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const double* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const double* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const double* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const double* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const double* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const float* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const float* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const float* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const float* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const float* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const float* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const float* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const float* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const float* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const float* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const int8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(int8_t* out, const uint8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const double* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const double* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const double* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const double* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const double* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const double* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const double* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const double* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const double* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const double* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const float* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const float* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const float* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const float* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const float* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const float* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const float* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const float* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const float* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const float* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const int8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint64_t* out, const uint8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const double* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const double* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const double* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const double* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const double* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const double* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const double* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const double* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const double* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const double* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const float* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const float* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const float* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const float* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const float* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const float* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const float* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const float* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const float* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const float* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const int8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint32_t* out, const uint8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const double* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const double* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const double* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const double* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const double* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const double* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const double* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const double* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const double* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const double* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const float* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const float* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const float* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const float* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const float* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const float* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const float* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const float* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const float* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const float* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const int8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint16_t* out, const uint8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const double* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const double* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const double* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const double* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const double* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const double* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const double* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const double* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const double* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const double* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const float* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const float* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const float* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const float* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const float* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const float* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const float* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const float* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const float* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const float* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const int8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint64_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint64_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint64_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint64_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint64_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint64_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint64_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint64_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint64_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint64_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint32_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint32_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint32_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint32_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint32_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint32_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint32_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint32_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint32_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint32_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint16_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint16_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint16_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint16_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint16_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint16_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint16_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint16_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint16_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint16_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint8_t* inp1, const double* inp2, const double* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint8_t* inp1, const float* inp2, const float* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint8_t* inp1, const int64_t* inp2, const int64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint8_t* inp1, const int32_t* inp2, const int32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint8_t* inp1, const int16_t* inp2, const int16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint8_t* inp1, const int8_t* inp2, const int8_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint8_t* inp1, const uint64_t* inp2, const uint64_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint8_t* inp1, const uint32_t* inp2, const uint32_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint8_t* inp1, const uint16_t* inp2, const uint16_t* scalar, uint64_t nel, uint8_t flip);

template const char* tcPlus(uint8_t* out, const uint8_t* inp1, const uint8_t* inp2, const uint8_t* scalar, uint64_t nel, uint8_t flip);

